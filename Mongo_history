sha256:b70536aeb2507ba0ea53767d15d836e140ccf3df74f2678f0cb5dd5c5e1d952c: /bin/sh -c #(nop)  CMD ["mongod"]
<missing>: /bin/sh -c #(nop)  EXPOSE 27017
<missing>: /bin/sh -c #(nop)  ENTRYPOINT ["docker-entrypoint.sh"]
<missing>: /bin/sh -c #(nop) COPY file:a062061dd38363517a589afdd763f61500b162faee89d415017c58fd70abe392 in /usr/local/bin/ 
<missing>: /bin/sh -c #(nop)  ENV HOME=/data/db
<missing>: /bin/sh -c #(nop)  VOLUME [/data/db /data/configdb]
<missing>: /bin/sh -c set -x  && export DEBIAN_FRONTEND=noninteractive  && apt-get update  && apt-get install -y   ${MONGO_PACKAGE}=$MONGO_VERSION   ${MONGO_PACKAGE}-server=$MONGO_VERSION   ${MONGO_PACKAGE}-shell=$MONGO_VERSION   ${MONGO_PACKAGE}-mongos=$MONGO_VERSION   ${MONGO_PACKAGE}-tools=$MONGO_VERSION  && rm -rf /var/lib/apt/lists/*  && rm -rf /var/lib/mongodb  && mv /etc/mongod.conf /etc/mongod.conf.orig
<missing>: /bin/sh -c #(nop)  ENV MONGO_VERSION=6.0.2
<missing>: /bin/sh -c echo "deb [ signed-by=/etc/apt/keyrings/mongodb.gpg ] http://$MONGO_REPO/apt/ubuntu focal/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse" | tee "/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list"
<missing>: /bin/sh -c #(nop)  ENV MONGO_MAJOR=6.0
<missing>: /bin/sh -c #(nop)  ENV MONGO_PACKAGE=mongodb-org MONGO_REPO=repo.mongodb.org
<missing>: /bin/sh -c #(nop)  ARG MONGO_REPO=repo.mongodb.org
<missing>: /bin/sh -c #(nop)  ARG MONGO_PACKAGE=mongodb-org
<missing>: /bin/sh -c set -ex;  export GNUPGHOME="$(mktemp -d)";  set -- '39BD841E4BE5FB195A65400E6A26B1AE64C3C388';  for key; do   gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key";  done;  mkdir -p /etc/apt/keyrings;  gpg --batch --export "$@" > /etc/apt/keyrings/mongodb.gpg;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME"
<missing>: /bin/sh -c mkdir /docker-entrypoint-initdb.d
<missing>: /bin/sh -c set -ex;   savedAptMark="$(apt-mark showmanual)";  apt-get update;  apt-get install -y --no-install-recommends   wget  ;  if ! command -v gpg > /dev/null; then   apt-get install -y --no-install-recommends gnupg dirmngr;   savedAptMark="$savedAptMark gnupg dirmngr";  elif gpg --version | grep -q '^gpg (GnuPG) 1\.'; then   apt-get install -y --no-install-recommends gnupg-curl;  fi;  rm -rf /var/lib/apt/lists/*;   dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')";  wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch";  wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc";  export GNUPGHOME="$(mktemp -d)";  gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4;  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;  command -v gpgconf && gpgconf --kill all || :;  rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc;   wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js";   apt-mark auto '.*' > /dev/null;  apt-mark manual $savedAptMark > /dev/null;  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;   chmod +x /usr/local/bin/gosu;  gosu --version;  gosu nobody true
<missing>: /bin/sh -c #(nop)  ENV JSYAML_VERSION=3.13.1
<missing>: /bin/sh -c #(nop)  ENV GOSU_VERSION=1.12
<missing>: /bin/sh -c set -eux;  apt-get update;  apt-get install -y --no-install-recommends   ca-certificates   jq   numactl  ;  if ! command -v ps > /dev/null; then   apt-get install -y --no-install-recommends procps;  fi;  rm -rf /var/lib/apt/lists/*
<missing>: /bin/sh -c set -eux;  groupadd --gid 999 --system mongodb;  useradd --uid 999 --system --gid mongodb --home-dir /data/db mongodb;  mkdir -p /data/db /data/configdb;  chown -R mongodb:mongodb /data/db /data/configdb
<missing>: /bin/sh -c #(nop)  CMD ["bash"]
<missing>: /bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / 
